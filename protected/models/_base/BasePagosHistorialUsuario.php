<?php

/**
 * This is the model base class for the table "pagos_historial_usuario".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PagosHistorialUsuario".
 *
 * Columns in table "pagos_historial_usuario" available as properties of the model,
 * followed by relations of table "pagos_historial_usuario" available as properties of the model.
 *
 * @property integer $idPagosHistorialUsuario
 * @property integer $idPagosUsuario
 * @property integer $idGastoHistorial
 * @property integer $TotalAlicuota
 *
 * @property GastoHistorial $idGastoHistorial0
 * @property PagosUsuario $idPagosUsuario0
 */
abstract class BasePagosHistorialUsuario extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'pagos_historial_usuario';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PagosHistorialUsuario|PagosHistorialUsuarios', $n);
	}

	public static function representingColumn() {
		return 'idPagosHistorialUsuario';
	}

	public function rules() {
		return array(
			array('idPagosUsuario, idGastoHistorial, TotalAlicuota', 'required'),
			array('idPagosUsuario, idGastoHistorial, TotalAlicuota', 'numerical', 'integerOnly'=>true),
			array('idPagosHistorialUsuario, idPagosUsuario, idGastoHistorial, TotalAlicuota', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idGastoHistorial0' => array(self::BELONGS_TO, 'GastoHistorial', 'idGastoHistorial'),
			'idPagosUsuario0' => array(self::BELONGS_TO, 'PagosUsuario', 'idPagosUsuario'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idPagosHistorialUsuario' => Yii::t('app', 'Id Pagos Historial Usuario'),
			'idPagosUsuario' => null,
			'idGastoHistorial' => null,
			'TotalAlicuota' => Yii::t('app', 'Total Alicuota'),
			'idGastoHistorial0' => null,
			'idPagosUsuario0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idPagosHistorialUsuario', $this->idPagosHistorialUsuario);
		$criteria->compare('idPagosUsuario', $this->idPagosUsuario);
		$criteria->compare('idGastoHistorial', $this->idGastoHistorial);
		$criteria->compare('TotalAlicuota', $this->TotalAlicuota);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}