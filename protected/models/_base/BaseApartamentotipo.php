<?php

/**
 * This is the model base class for the table "apartamentotipo".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Apartamentotipo".
 *
 * Columns in table "apartamentotipo" available as properties of the model,
 * followed by relations of table "apartamentotipo" available as properties of the model.
 *
 * @property integer $idApartamentoTipo
 * @property string $Nombre
 * @property integer $Tamano
 * @property integer $numBanos
 * @property integer $numHab
 * @property integer $Sala
 * @property integer $Cocina
 * @property integer $Comedor
 * @property integer $numEst
 * @property integer $Maletero
 * @property integer $Casillero
 * @property integer $Alicuota
 *
 * @property Apartamento[] $apartamentos
 */
abstract class BaseApartamentotipo extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'apartamentotipo';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Apartamentotipo|Apartamentotipos', $n);
	}

	public static function representingColumn() {
		return 'Nombre';
	}

	public function rules() {
		return array(
			array('Nombre, Tamano, numBanos, numHab, Sala, Cocina, Comedor, numEst, Maletero, Casillero, Alicuota', 'required'),
			array('Tamano, numBanos, numHab, Sala, Cocina, Comedor, numEst, Maletero, Casillero, Alicuota', 'numerical', 'integerOnly'=>true),
			array('Nombre', 'length', 'max'=>20),
			array('idApartamentoTipo, Nombre, Tamano, numBanos, numHab, Sala, Cocina, Comedor, numEst, Maletero, Casillero, Alicuota', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'apartamentos' => array(self::HAS_MANY, 'Apartamento', 'Tipo'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idApartamentoTipo' => Yii::t('app', 'Id Apartamento Tipo'),
			'Nombre' => Yii::t('app', 'Nombre'),
			'Tamano' => Yii::t('app', 'Tamano'),
			'numBanos' => Yii::t('app', 'Num Banos'),
			'numHab' => Yii::t('app', 'Num Hab'),
			'Sala' => Yii::t('app', 'Sala'),
			'Cocina' => Yii::t('app', 'Cocina'),
			'Comedor' => Yii::t('app', 'Comedor'),
			'numEst' => Yii::t('app', 'Num Est'),
			'Maletero' => Yii::t('app', 'Maletero'),
			'Casillero' => Yii::t('app', 'Casillero'),
			'Alicuota' => Yii::t('app', 'Alicuota'),
			'apartamentos' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idApartamentoTipo', $this->idApartamentoTipo);
		$criteria->compare('Nombre', $this->Nombre, true);
		$criteria->compare('Tamano', $this->Tamano);
		$criteria->compare('numBanos', $this->numBanos);
		$criteria->compare('numHab', $this->numHab);
		$criteria->compare('Sala', $this->Sala);
		$criteria->compare('Cocina', $this->Cocina);
		$criteria->compare('Comedor', $this->Comedor);
		$criteria->compare('numEst', $this->numEst);
		$criteria->compare('Maletero', $this->Maletero);
		$criteria->compare('Casillero', $this->Casillero);
		$criteria->compare('Alicuota', $this->Alicuota);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}