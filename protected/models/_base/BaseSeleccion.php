<?php

/**
 * This is the model base class for the table "seleccion".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Seleccion".
 *
 * Columns in table "seleccion" available as properties of the model,
 * followed by relations of table "seleccion" available as properties of the model.
 *
 * @property integer $idSeleccion
 * @property string $Nombre
 * @property integer $idSeleccionPadre
 *
 * @property Horarioseleccion[] $horarioseleccions
 * @property Seleccion $idSeleccionPadre0
 * @property Seleccion[] $seleccions
 */
abstract class BaseSeleccion extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'seleccion';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Seleccion|Seleccions', $n);
	}

	public static function representingColumn() {
		return 'Nombre';
	}

	public function rules() {
		return array(
			array('idSeleccionPadre', 'numerical', 'integerOnly'=>true),
			array('Nombre', 'length', 'max'=>25),
			array('Nombre, idSeleccionPadre', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idSeleccion, Nombre, idSeleccionPadre', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'horarioseleccions' => array(self::HAS_MANY, 'Horarioseleccion', 'idSeleccion'),
			'idSeleccionPadre0' => array(self::BELONGS_TO, 'Seleccion', 'idSeleccionPadre'),
			'seleccions' => array(self::HAS_MANY, 'Seleccion', 'idSeleccionPadre'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idSeleccion' => Yii::t('app', 'Id Seleccion'),
			'Nombre' => Yii::t('app', 'Nombre'),
			'idSeleccionPadre' => null,
			'horarioseleccions' => null,
			'idSeleccionPadre0' => null,
			'seleccions' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idSeleccion', $this->idSeleccion);
		$criteria->compare('Nombre', $this->Nombre, true);
		$criteria->compare('idSeleccionPadre', $this->idSeleccionPadre);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}